'use strict';

describe('Recovery policy edit controller', function () {
    var controller, testScope, trans, enums;

    beforeEach(module('zvmTest'));

    beforeEach(inject(function ($injector, $controller, $rootScope, $translate, _enums_) {
        testScope = $rootScope.$new();
        testScope.$parent = {};
        testScope.$parent.oneVpg = {"commitPolicyObj": {"defaultTimeout": 40, "setDefaultTimeout" : function(){}}, "Identifier":{"GroupGuid":"abca2d3d-c563-44b1-b981-0b48cf661022"},"AlertStatus":2,"Name":"xxx","State":{"State":0,"Status":4,"SubStatus":0,"IsProgressActive":false,"ProgressPercentage":0,"ProgressDetails":null,"IsFailoverEnabled":true,"IsMoveEnabled":true,"IsFailoverTestEnabled":true,"IsUpdateEnabled":true,"IsInsertCheckpointEnabled":true,"RelevantCheckpoint":null,"IsProtectedSiteConnected":true,"AlertStatus":2,"AlertTips":{"Alerts":[{"Description":"The VPG xxx has been protected for 1 hour and 39 minutes but the journal history is only 16 minutes.","SiteName":"gui_local_vcd","AlertLevel":1},{"Description":"Following VMs 'kobi-test-vm,kobi_vm_3' have not existed FailoverOrMove or FailoverTest network.","SiteName":"gui_local_vcd","AlertLevel":0},{"Description":"VPG outside of ZORG. \nVPG xxx has protected resources which are not assigned to ZORG guy.\nIn order to ensure that disaster recovery is fully supported, add the protected resources to the ZORG or change the VPG ZORG. Details: \nDetails : \n VM kobi-test-vm uses a root resource pool\n but it belongs to a ZORG.\n Failover network VM Network\n in use by VM kobi-test-vm\n  is not part of the ZORG.\n Failover test network VM Network\n in use by VM kobi-test-vm\n  is not part of the ZORG.\n Datastore ZNest83Datastore\n in use by VM kobi-test-vm\n  is not part of the ZORG.\n Datastore ZNest83Datastore\n in use by VM kobi-test-vm (volume VMUuids Uuids: [Uuid = 56 4d 43 33 36 7e 19 a3-27 8f 66 c4 5e ea 1e 83\n InstanceUuid = 52 39 06 73 9d 16 73 94-cf 1c 75 0f 30 82 93 6e]\n Scsi(0:0))\n  is not part of the ZORG.","SiteName":"gui_local_vcd","AlertLevel":0}],"HasMore":true,"TotalNumberOfAlerts":4,"TotalNumberOfWarnings":3,"TotalNumberOfErrors":1},"IsDeleteEnabled":true,"IsForceSyncEnabled":false,"IsCloneEnabled":true,"VPGTimebombInfo":null,"CloneStatusVisualObject":null,"IsMoveInStagesSupported":true,"IsFailoverInStagesSupported":true,"MoveAutoContinueState":{"AutoContinueActivated":false,"Action":1,"TimeLeftInSec":0},"RequiresForceToDelete":false,"PauseResumeVisualObject":{"IsVpgNowPaused":false,"IsPauseEnabled":true,"IsResumeEnabled":false},"IsRecoverCommitEnabled":false,"IsRecoverRollbackEnabled":false,"ActiveProcesses":{"RunningFailOverTest":null,"RunningClone":null,"Paused":null,"IsVpgNowPaused":false,"IsResumeEnabled":false,"RunningBackup":null,"IsStopFOTEnabled":false,"VpgUpdate":null,"TimebombInfo":null},"ButtonsState":{"IsFailoverEnabled":true,"IsMoveEnabled":true,"IsFailoverTestEnabled":true,"IsUpdateEnabled":true,"IsPauseEnabled":true,"IsInsertCheckpointEnabled":true,"IsProtectedSiteConnected":true,"IsDeleteEnabled":true,"IsForceSyncEnabled":false,"IsCloneEnabled":true,"IsMoveInStagesSupported":true,"IsFailoverInStagesSupported":true,"IsRecoverCommitEnabled":false,"IsRecoverRollbackEnabled":false,"RequiresForceToDelete":false,"IsBackupEnabled":false,"IsAbortBackupEnabled":false},"ProgressObject":null},"Priority":1,"NumberOfVms":1,"ProvisionedStorageInMB":121,"UsedStorageInMB":117,"IOPS":0,"IncomingThroughputInMb":0,"OutgoingBandWidth":0,"ActualRPO":3,"ConfiguredRPO":300,"LastTest":null,"Direction":2,"SampleVM":{"InternalVmName":"vm-158","ServerIdentifier":{"ServerGuid":"598e5def-3500-4409-a691-d25b5cd10d22"}},"OwnersId":{"OwnersGuid":"888824c4-e1ce-4a93-9f4c-e3a650f7eec2"},"SourceSiteName":"gui_local_vcd","TargetSiteName":"gui_local_vcd","CustomerName":"guy","AlertTips":{"Alerts":[{"Description":"The VPG xxx has been protected for 1 hour and 39 minutes but the journal history is only 16 minutes.","SiteName":"gui_local_vcd","AlertLevel":1},{"Description":"Following VMs 'kobi-test-vm,kobi_vm_3' have not existed FailoverOrMove or FailoverTest network.","SiteName":"gui_local_vcd","AlertLevel":0},{"Description":"VPG outside of ZORG. \nVPG xxx has protected resources which are not assigned to ZORG guy.\nIn order to ensure that disaster recovery is fully supported, add the protected resources to the ZORG or change the VPG ZORG. Details: \nDetails : \n VM kobi-test-vm uses a root resource pool\n but it belongs to a ZORG.\n Failover network VM Network\n in use by VM kobi-test-vm\n  is not part of the ZORG.\n Failover test network VM Network\n in use by VM kobi-test-vm\n  is not part of the ZORG.\n Datastore ZNest83Datastore\n in use by VM kobi-test-vm\n  is not part of the ZORG.\n Datastore ZNest83Datastore\n in use by VM kobi-test-vm (volume VMUuids Uuids: [Uuid = 56 4d 43 33 36 7e 19 a3-27 8f 66 c4 5e ea 1e 83\n InstanceUuid = 52 39 06 73 9d 16 73 94-cf 1c 75 0f 30 82 93 6e]\n Scsi(0:0))\n  is not part of the ZORG.","SiteName":"gui_local_vcd","AlertLevel":0}],"HasMore":true,"TotalNumberOfAlerts":4,"TotalNumberOfWarnings":3,"TotalNumberOfErrors":1},"Entities":{"Source":0,"Target":0},"ZorgId":{"Guid":"00d1c964-4d92-462b-9de0-7176739ba472"},"BackupRelatedData":{"VpgBackupJobStatus":2,"BackupRepository":"","RestorePointsRange":5,"BackupSchedulingTime":{"SchedulePeriodType":0,"RunningTimeOfDayInMinutes":0,"DayOfWeek":6}},"RetentionPolicy":0,"BootOrder":false,"AreScriptsDefined":false,"HistoryInSeconds":985,"operation":{"progressValue":0,"showProgress":false,"stopTestButton":false,"stopBackupButton":false},"vpgState":{"display":"","value":0,"showProgress":false,"spanClass":"none","divClass":"none"},"id":0,"vpgName":"xxx (1)","PeerSiteTypeObj":{"display":"gui_local_vcd","value":0},"StateLabel":{"display":"History Not Meeting SLA","value":4},"recoveryItemVo":{"lastCheckpoint":{"Identifier":{"Identifier":1197},"TimeStamp":"2015-01-07T10:28:48.618Z","Tag":null,"Vss":false},"defaultAction":1,"defaultTimeout":2400,"commitPolicy":"Auto-Commit ,40 min","checkpoint":"07.01.2015 12:28:48","shutdownAction":"No","useReverseProtection":false,"useBootorder":false,"useScripts":false,"isBackupInProgress":null,"isForceShutdown":false,"vpgInfo":null,"reverseLabel":""}};
        enums = _enums_;

        controller = $controller('recoveryEditController', {$scope: testScope, $translate: $translate});
    }));

    it("should check defined properties", function () {
        expect(testScope.commitValues).toBeDefined();
        expect(testScope.maxDefaultTimeoutMinutes).toEqual(1440);
        expect(testScope.showDefaultTime).toEqual(true);
        expect(testScope.oneVpg.commitPolicyObj.defaultTimeout).toEqual(40);
    });

});
